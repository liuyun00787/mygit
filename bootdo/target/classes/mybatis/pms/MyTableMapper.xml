<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.pms.dao.MyTableDao">

	<select id="get" resultType="com.bootdo.pms.domain.MyTableDO">
		select `id`,`NAME_`,`VALUE_`,`REV_` from test_my_table where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.pms.domain.MyTableDO">
		select `id`,`NAME_`,`VALUE_`,`REV_` from test_my_table
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and NAME_ = #{name} </if>
		  		  <if test="value != null and value != ''"> and VALUE_ = #{value} </if>
		  		  <if test="rev != null and rev != ''"> and REV_ = #{rev} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from test_my_table
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and NAME_ = #{name} </if>
		  		  <if test="value != null and value != ''"> and VALUE_ = #{value} </if>
		  		  <if test="rev != null and rev != ''"> and REV_ = #{rev} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.pms.domain.MyTableDO" useGeneratedKeys="true" keyProperty="id">
		insert into test_my_table
		(
			`NAME_`, 
			`VALUE_`, 
			`REV_`
		)
		values
		(
			#{name}, 
			#{value}, 
			#{rev}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.pms.domain.MyTableDO">
		update test_my_table 
		<set>
			<if test="name != null">`NAME_` = #{name}, </if>
			<if test="value != null">`VALUE_` = #{value}, </if>
			<if test="rev != null">`REV_` = #{rev}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from test_my_table where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from test_my_table where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>